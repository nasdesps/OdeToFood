using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using OdeToFood.Data;
using OdeToFood.Models;

namespace OdeToFood.Services
{
    public class SqlRestaurantData : IRestaurantData
    {
        private OdeToFoodDbContext _context;

        public SqlRestaurantData(OdeToFoodDbContext context)
        {
            _context = context;
        }

        /// <summary>
        /// Insert of restaurant will not occur until we invoke SaveChanges on DbContext.
        /// At that point Entity Framework will figure out everything that's been added or updated or deleted and will start issuing SQL commands to the database.
        /// With the entity framework and SQL Server, the Id property of a restaurant will, by default, become an identity column inside of SQL Server, 
        /// and with identity columns, the value can be auto-generated by SQL Server, by the database.
        /// And what the entity framework will do after it inserts with SaveChanges, 
        /// the framework will automatically grab the generated ID value and place it into restaurant.
        /// </summary>
        /// <param name="restaurant"></param>
        /// <returns></returns>
        public Restaurant Add(Restaurant restaurant)
        {
            _context.Restaurants.Add(restaurant);
            _context.SaveChanges();
            return restaurant;
        }

        public Restaurant Get(int id)
        {
            return _context.Restaurants.FirstOrDefault(r => r.ID == id);
        }

        public IEnumerable<Restaurant> GetAll()
        {
            return _context.Restaurants.OrderBy(r => r.Name);
        }
    }
}
